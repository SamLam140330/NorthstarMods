untyped
global function MpInitAILoadouts
global function SetProficiency
global function SPMP_UpdateNPCProficiency
global function SPMP_Callback_ForceAIMissPlayer
global function IsAutoPopulateEnabled

global function AISpawn_SetupNPCWeapons
global function AISpawn_SetupNPCAntiTitanWeapons
global function AISpawn_GetRandomWeaponForClass
global function AISpawn_GetRandomATWeaponForClass

struct{
	table< string, array<string> > defaultNPCWeapons
	table< string, array<string> > defaultNPCATWeapons
}file

void function MpInitAILoadouts()
{

}

void function AISpawn_SetupNPCWeapons( string npcClass, array<string> weapons )
{
	if ( !( npcClass in file.defaultNPCWeapons ) )
		file.defaultNPCWeapons[ npcClass ] <- []

	file.defaultNPCWeapons[ npcClass ] = weapons
}

void function AISpawn_SetupNPCAntiTitanWeapons( string npcClass, array<string> weapons )
{
	if ( !( npcClass in file.defaultNPCATWeapons ) )
		file.defaultNPCATWeapons[ npcClass ] <- []

	file.defaultNPCATWeapons[ npcClass ] = weapons
}

string function AISpawn_GetRandomWeaponForClass( entity npc )
{
	string className = npc.GetClassName()
	if ( className in file.defaultNPCWeapons )
	{
		if ( file.defaultNPCWeapons[ className ].len() )
			return file.defaultNPCWeapons[ className ].getrandom()
	}

	return ""
}

string function AISpawn_GetRandomATWeaponForClass( entity npc )
{
	string className = npc.GetClassName()
	if ( className in file.defaultNPCATWeapons )
	{
		if ( file.defaultNPCATWeapons[ className ].len() )
			return file.defaultNPCATWeapons[ className ].getrandom()
	}

	return "mp_weapon_defender" // Default Charge Rifle as fallback
}

void function SetProficiency( entity npc )
{
	npc.kv.WeaponProficiency = level.nv.aiLethality
}

void function SPMP_UpdateNPCProficiency( entity npc )
{
	#if MP
	UpdateNPCForAILethality( npc )
	#else
	SetProficiency( npc )
	#endif
}

bool function IsAutoPopulateEnabled( var team = null )
{
	if ( IsNPCSpawningEnabled() == false )
		return false

	if ( Flag( "disable_npcs" ) )
		return false

	if ( team == TEAM_MILITIA && Flag( "Disable_MILITIA" ) )
		return false
	if ( team == TEAM_IMC && Flag( "Disable_IMC" ) )
		return false

	return true
}

bool function SPMP_Callback_ForceAIMissPlayer( entity npc, entity player )
{
	if ( GetGameState() >= eGameState.Postmatch )
		return true
	
	if ( player.IsTitan() )
		return false
		
	int lethality = Riff_AILethality()
	if ( lethality <= eAILethality.Medium )
		if ( player.GetTitanSoulBeingRodeoed() != null )
			return true
	
	if ( Bleedout_IsBleedoutLogicActive() && Bleedout_ShouldAIMissBleedingPlayer( player ) )
		return true
	
	if ( player.ContextAction_IsActive() )
		return RandomFloat( 1 ) >= 0.25
	
	if ( IsFastPilot( player ) )
	{
		float chance = ( lethality + 1 ) * 0.125
		if ( lethality <= eAILethality.Medium && npc.IsMechanical() )
			chance /= 1.25
		
		return RandomFloat( 1 ) >= chance
	}
	
	return false
}
